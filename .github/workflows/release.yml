name: Release

on:
  push:
    tags:
      - '*'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract VERSION
        id: extract_version
        run: |
          VERSION=$(cat version.txt)
          echo "VERSION=$VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Create GitHub Release
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          TAG_NAME="v$VERSION"
          RELEASE_NAME="Release v$VERSION"
          API_URL="https://api.github.com/repos/Escape-hiring/js-py-backend/releases"
          RESPONSE=$(curl -s -X POST -H "X-GitHub-Api-Version: 2022-11-28" -H "Authorization: Bearer $GH_PAT" $API_URL -d "{ \"tag_name\": \"$TAG_NAME\", \"name\": \"$RELEASE_NAME\", \"draft\": false, \"prerelease\": false, \"make_latest\": \"true\" }")
          UPLOAD_URL=$(echo $RESPONSE | jq -r .upload_url | sed -e "s/{?name,label}//")
          echo "UPLOAD_URL=$UPLOAD_URL" >> $GITHUB_ENV

      - name: Upload Release Assets
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
          UPLOAD_URL: ${{ env.UPLOAD_URL }}
        run: |
          FILENAME='repo.tar.gz'
          tar --exclude="./$FILENAME" --exclude="./.git/*" -czvf $FILENAME ./*
          curl -s -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            -H "Authorization: Bearer $GH_PAT" \
            -H "Content-Type: application/octet-stream" \
            "$UPLOAD_URL?name=$FILENAME" \
            --data-binary "@$FILENAME"